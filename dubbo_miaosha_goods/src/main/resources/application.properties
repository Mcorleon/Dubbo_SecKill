server.port=8080

spring.mvc.view.prefix=classpath:/templates/
spring.mvc.view.suffix=.html
spring.mvc.static-path-pattern=/static/**

## Dubbo 服务提供者配置
dubbo.application.name=dubbo_goods
dubbo.registry.address=zookeeper://127.0.0.1:2181
dubbo.protocol.name=dubbo
dubbo.protocol.port=20880
dubbo.scan=com.tqh
dubbo.reference.check=false
dubbo.consumer.check=false
dubbo.registry.check=false


#数据源
spring.datasource.url=jdbc:mysql://localhost:3306/miaosha?useUnicode=true&characterEncoding=utf8&useSSL=false
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#连接池的最大值，同一时间可以从池分配的最多连接数量，0时无限制
spring.datasource.max-active=1200
#指定连接池中连接处于空闲状态的最长时间,超过会抛出异常，-1表示无限
spring.datasource.max-wait=50000
#最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请
spring.datasource.min-idle=500
#最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 ，0时无限制
spring.datasource.max-idle=1000
#连接初始值，连接池启动时创建的连接数量的初始值
spring.datasource.initial-size=100
mybatis.typeAliasesPackage=com.tqh.model

# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=1000
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=10
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=500
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0